//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi.Attributes;
using Substrate.NetApi.Model.Types.Base;
using Substrate.NetApi.Model.Types.Metadata.Base;
using System.Collections.Generic;


namespace Substrate.NetApi.Generated.Model.pallet_contracts.storage
{
    
    
    /// <summary>
    /// >> 273 - Composite[pallet_contracts.storage.ContractInfo]
    /// </summary>
    [SubstrateNodeType(TypeDefEnum.Composite)]
    public sealed class ContractInfo : BaseType
    {
        
        /// <summary>
        /// >> trie_id
        /// </summary>
        public Substrate.NetApi.Generated.Model.bounded_collections.bounded_vec.BoundedVecT5 TrieId { get; set; }
        /// <summary>
        /// >> deposit_account
        /// </summary>
        public Substrate.NetApi.Generated.Model.pallet_contracts.storage.DepositAccount DepositAccount { get; set; }
        /// <summary>
        /// >> code_hash
        /// </summary>
        public Substrate.NetApi.Generated.Model.primitive_types.H256 CodeHash { get; set; }
        /// <summary>
        /// >> storage_bytes
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U32 StorageBytes { get; set; }
        /// <summary>
        /// >> storage_items
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U32 StorageItems { get; set; }
        /// <summary>
        /// >> storage_byte_deposit
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U128 StorageByteDeposit { get; set; }
        /// <summary>
        /// >> storage_item_deposit
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U128 StorageItemDeposit { get; set; }
        /// <summary>
        /// >> storage_base_deposit
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U128 StorageBaseDeposit { get; set; }
        
        /// <inheritdoc/>
        public override string TypeName()
        {
            return "ContractInfo";
        }
        
        /// <inheritdoc/>
        public override byte[] Encode()
        {
            var result = new List<byte>();
            result.AddRange(TrieId.Encode());
            result.AddRange(DepositAccount.Encode());
            result.AddRange(CodeHash.Encode());
            result.AddRange(StorageBytes.Encode());
            result.AddRange(StorageItems.Encode());
            result.AddRange(StorageByteDeposit.Encode());
            result.AddRange(StorageItemDeposit.Encode());
            result.AddRange(StorageBaseDeposit.Encode());
            return result.ToArray();
        }
        
        /// <inheritdoc/>
        public override void Decode(byte[] byteArray, ref int p)
        {
            var start = p;
            TrieId = new Substrate.NetApi.Generated.Model.bounded_collections.bounded_vec.BoundedVecT5();
            TrieId.Decode(byteArray, ref p);
            DepositAccount = new Substrate.NetApi.Generated.Model.pallet_contracts.storage.DepositAccount();
            DepositAccount.Decode(byteArray, ref p);
            CodeHash = new Substrate.NetApi.Generated.Model.primitive_types.H256();
            CodeHash.Decode(byteArray, ref p);
            StorageBytes = new Substrate.NetApi.Model.Types.Primitive.U32();
            StorageBytes.Decode(byteArray, ref p);
            StorageItems = new Substrate.NetApi.Model.Types.Primitive.U32();
            StorageItems.Decode(byteArray, ref p);
            StorageByteDeposit = new Substrate.NetApi.Model.Types.Primitive.U128();
            StorageByteDeposit.Decode(byteArray, ref p);
            StorageItemDeposit = new Substrate.NetApi.Model.Types.Primitive.U128();
            StorageItemDeposit.Decode(byteArray, ref p);
            StorageBaseDeposit = new Substrate.NetApi.Model.Types.Primitive.U128();
            StorageBaseDeposit.Decode(byteArray, ref p);
            var bytesLength = p - start;
            TypeSize = bytesLength;
            Bytes = new byte[bytesLength];
            System.Array.Copy(byteArray, start, Bytes, 0, bytesLength);
        }
    }
}
